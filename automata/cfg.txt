/* MAIN STATE */
MAIN_STATE -> MAIN_STATE MAIN_STATE | EPSILON | IF_STATE | SWITCH_STATE | LOOP_STATE | FUNCTION_STATE | FUNCTION_CALL | TRY_STATE | THROW_STATE | DECLARATION_STATE | ASSIGNMENT | DELETE_STATE | PARAM

/* CONDITIONAL */
IF_STATE -> IF ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN MAIN_STATE CURLY_BRACKET_CLOSE | IF ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN MAIN_STATE CURLY_BRACKET_CLOSE ELSE_STATE 
ELSE_STATE -> ELSE IF_STATE | ELSE CURLY_BRACKET_OPEN MAIN_STATE CURLY_BRACKET_CLOSE
SWITCH_STATE -> SWITCH ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN CASE_STATE CURLY_BRACKET_CLOSE
CASE_STATE -> CASE_STATE CASE_STATE | CASE OPS_TYPE COLON MAIN_STATE BREAK MAIN_STATE | DEFAULT COLON MAIN_STATE BREAK MAIN_STATE | CASE OPS_TYPE COLON MAIN_STATE | DEFAULT COLON MAIN_STATE | EPSILON

/* LOOPING */
LOOP_STATE -> FOR_STATE | WHILE_STATE
FOR_STATE -> FOR ROUND_BRACKET_OPEN FOR_HEAD ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN LOOP_BODY CURLY_BRACKET_CLOSE
FOR_HEAD -> FOR_INIT OPS_TYPE OPS_TYPE | FOR_INIT OPS_TYPE ASSIGNMENT | ROUND_BRACKET_OPEN FOR_HEAD ROUND_BRACKET_CLOSE
FOR_INIT -> LET_DECLARATION | VAR_DECLARATION | ASSIGNMENT | EPSILON
WHILE_STATE -> WHILE ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN LOOP_BODY CURLY_BRACKET_CLOSE
LOOP_BODY -> BREAK | CONTINUE | LOOP_BODY LOOP_BODY | LOOP_IN | EPSILON
LOOP_IN -> IF_LOOP | SWITCH_LOOP | LOOP_STATE | FUNCTION_CALL | TRY_STATE | THROW_STATE | DECLARATION_STATE | ASSIGNMENT | DELETE_STATE | PARAM | FUNCTION_STATE
IF_LOOP -> IF ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN LOOP_BODY CURLY_BRACKET_CLOSE | IF ROUND_BRACKET_OPEN EXPR ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN LOOP_BODY CURLY_BRACKET_CLOSE ELSE_LOOP
ELSE_LOOP -> ELSE IF_LOOP | ELSE CURLY_BRACKET_OPEN LOOP_BODY CURLY_BRACKET_CLOSE
SWITCH_LOOP -> SWITCH ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN CASE_LOOP CURLY_BRACKET_CLOSE
CASE_LOOP -> CASE_LOOP CASE_LOOP | CASE OPS_TYPE COLON LOOP_BODY BREAK LOOP_BODY | DEFAULT COLON LOOP_BODY BREAK LOOP_BODY | CASE OPS_TYPE COLON LOOP_BODY | DEFAULT COLON LOOP_BODY | EPSILON

/* FUNCTION */
FUNCTION_CALL -> VAR_NAME ROUND_BRACKET_OPEN PARAMETER ROUND_BRACKET_CLOSE | VAR_NAME GETTER ROUND_BRACKET_OPEN PARAMETER ROUND_BRACKET_CLOSE | VAR_NAME GETTER
GETTER -> DOT VAR_NAME | GETTER GETTER | DOT LIST_ACCESS | DOT EXPR
FUNCTION_STATE -> FUNCTION VAR_NAME ROUND_BRACKET_OPEN PARAMETER ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN FUNCTION_BODY CURLY_BRACKET_CLOSE
FUNCTION_BODY -> FUNCTION_BODY FUNCTION_BODY | FUNCTION_IN | RETURN OPS_TYPE | RETURN | EPSILON
FUNCTION_IN -> IF_FUNCTION | SWITCH_FUNCTION | LOOP_FUNCTION | FUNCTION_CALL | TRY_STATE | THROW_STATE | DECLARATION_STATE | ASSIGNMENT | DELETE_STATE | PARAM | FUNCTION_STATE
IF_FUNCTION -> IF ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN FUNCTION_BODY CURLY_BRACKET_CLOSE | IF ROUND_BRACKET_OPEN EXPR ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN FUNCTION_BODY CURLY_BRACKET_CLOSE ELSE_FUNCTION
ELSE_FUNCTION -> ELSE IF_FUNCTION | ELSE CURLY_BRACKET_OPEN FUNCTION_BODY CURLY_BRACKET_CLOSE
SWITCH_FUNCTION -> SWITCH ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN CASE_FUNCTION CURLY_BRACKET_CLOSE
CASE_FUNCTION -> CASE_FUNCTION CASE_FUNCTION | CASE OPS_TYPE COLON FUNCTION_BODY BREAK FUNCTION_BODY | DEFAULT COLON FUNCTION_BODY BREAK FUNCTION_BODY | CASE OPS_TYPE COLON FUNCTION_BODY | DEFAULT COLON FUNCTION_BODY | EPSILON
LOOP_FUNCTION -> FOR_FUNCTION | WHILE_FUNCTION
FOR_FUNCTION -> FOR ROUND_BRACKET_OPEN FOR_HEAD ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN LOOP_FUNCTION_BODY CURLY_BRACKET_CLOSE
WHILE_FUNCTION -> WHILE ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN LOOP_FUNCTION_BODY CURLY_BRACKET_CLOSE
LOOP_FUNCTION_BODY -> BREAK | CONTINUE | FUNCTION_BODY | CONDITIONAL_FUNCTION_LOOP | LOOP_FUNCTION_BODY LOOP_FUNCTION_BODY | EPSILON | RETURN
CONDITIONAL_FUNCTION_LOOP -> IF_FUNCTION_LOOP | ELSE_FUNCTION_LOOP | SWITCH_FUNCTION_LOOP
IF_FUNCTION_LOOP -> IF ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN LOOP_FUNCTION_BODY CURLY_BRACKET_CLOSE | IF ROUND_BRACKET_OPEN EXPR ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN LOOP_FUNCTION_BODY CURLY_BRACKET_CLOSE ELSE_FUNCTION_LOOP
ELSE_FUNCTION_LOOP -> ELSE IF_FUNCTION_LOOP | ELSE CURLY_BRACKET_OPEN LOOP_FUNCTION_BODY CURLY_BRACKET_CLOSE
SWITCH_FUNCTION_LOOP -> SWITCH ROUND_BRACKET_OPEN OPS_TYPE ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN CASE_FUNCTION_LOOP CURLY_BRACKET_CLOSE
CASE_FUNCTION_LOOP -> CASE_FUNCTION_LOOP CASE_FUNCTION_LOOP | CASE OPS_TYPE COLON lOOP_FUNCTION_BODY BREAK LOOP_FUNCTION_BODY | DEFAULT COLON LOOP_FUNCTION_BODY BREAK LOOP_FUNCTION_BODY | CASE OPS_TYPE COLON LOOP_FUNCTION_BODY | DEFAULT COLON LOOP_FUNCTION_BODY | EPSILON

/* TRY CATCH */
TRY_STATE -> TRY_BODY CATCH_BODY | TRY_BODY FINALLY_BODY | TRY_BODY CATCH_BODY FINALLY_BODY
TRY_BODY -> TRY CURLY_BRACKET_OPEN MAIN_STATE CURLY_BRACKET_CLOSE
CATCH_BODY -> CATCH ROUND_BRACKET_OPEN VAR_NAME ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN MAIN_STATE CURLY_BRACKET_CLOSE | CATCH ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN MAIN_STATE CURLY_BRACKET_CLOSE
FINALLY_BODY -> FINALLY CURLY_BRACKET_OPEN MAIN_STATE CURLY_BRACKET_CLOSE

/* THROW */
THROW_STATE -> THROW OPS_TYPE

/* PARAMETER */
PARAMETER -> PARAM COMMA PARAMETER | PARAM | EPSILON
PARAM -> VAR_NAME | ASSIGNMENT | EXPR | FUNCTION_CALL | BOOLEAN | NAN | NULL | LIST_ACCESS | ROUND_BRACKET_OPEN PARAM ROUND_BRACKET_CLOSE

/* VARIABLE */
ASSIGNMENT -> VAR_NAME ASSIGNMENT_SYMBOL OPS_TYPE | VAR_NAME ASSIGNMENT_SYMBOL CURLY_BRACKET_OPEN OBJECT_DECLARATION CURLY_BRACKET_CLOSE | ARRAY_DECLARATION | OBJECT_DECLARATION
ASSIGNMENT_SYMBOL -> EQUALS | PLUS EQUALS | MIN EQUALS | MULTIPLY EQUALS | DIVIDE EQUALS | MOD EQUALS | MULTIPLY MULTIPLY EQUALS | RIGHT RIGHT EQUALS | LEFT LEFT EQUALS | LEFT LEFT LEFT EQUALS | AND EQUALS | OR EQUALS | XOR EQUALS | AND AND EQUALS | OR OR EQUALS | QUESTION QUESTION EQUALS
DELETE_STATE -> DELETE VAR_NAME OPEN_SQUARE_BRACKET VAR_NAME CLOSE_SQUARE_BRACKET | DELETE FUNCTION_CALL | DELETE VAR_NAME | DELETE LIST_ACCESS | DELETE EXPR
DECLARATION_STATE -> CONST_DECLARATION | LET_DECLARATION | VAR_DECLARATION
CONST_DECLARATION -> CONST ASSIGNMENT
LET_DECLARATION -> LET ASSIGNMENT | LET VAR_NAME
VAR_DECLARATION -> VAR ASSIGNMENT | VAR VAR_NAME
ARRAY_DECLARATION -> VAR_NAME ASSIGNMENT_SYMBOL LIST_DECLARATION
OBJECT_DECLARATION -> VAR_NAME COLON OPS_TYPE COMMA OBJECT_DECLARATION | VAR_NAME COLON OPS_TYPE
LIST_DECLARATION -> OPEN_SQUARE_BRACKET PARAMETER CLOSE_SQUARE_BRACKET
LIST_ACCESS -> VAR_NAME LIST_INDEX
LIST_INDEX -> LIST_INDEX LIST_INDEX | OPEN_SQUARE_BRACKET PARAM CLOSE_SQUARE_BRACKET
OPS_TYPE -> PARAM
BOOLEAN -> TRUE | FALSE

/* TERMINAL */
EPSILON -> epsilon
IF -> if
EXPR -> expr
CURLY_BRACKET_OPEN -> {
CURLY_BRACKET_CLOSE -> }
OPEN_SQUARE_BRACKET -> [
CLOSE_SQUARE_BRACKET -> ]
ROUND_BRACKET_OPEN -> (
ROUND_BRACKET_CLOSE -> )
ELSE -> else
SWITCH -> switch
CASE -> case
VAR_NAME -> var_name
BREAK -> break
DEFAULT -> default
COLON -> :
FOR -> for
WHILE -> while
CONTINUE -> continue
RETURN -> return
TRY -> try
CATCH -> catch
FINALLY -> finally
THROW -> throw
COMMA -> ,
EQUALS -> =
PLUS -> +
MIN -> -
MULTIPLY -> *
DIVIDE -> /
MOD -> %
RIGHT -> <
LEFT -> >
AND -> &
OR -> |
XOR -> ^
QUESTION -> ?
DELETE -> delete
CONST -> const
LET -> let
VAR -> var
TRUE -> true
FALSE -> false
NAN -> NaN
NULL -> null
DOT -> .
FUNCTION -> function